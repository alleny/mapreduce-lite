= How to Build !MapReduce-Lite =

== On Ubuntu 13.04 x86_64 ==

=== Install Development Tools ===

{{{
sudo apt-get install subversion gcc g++ cmake
}}}

=== Checkout Source Code ===

{{{
svn checkout http://mapreduce-lite.googlecode.com/svn/trunk/ mapreduce-lite
}}}

=== Install Prerequisite Packages ===

{{{
sudo apt-get install libprotobuf-dev protobuf-compiler libgflags-dev libboost1.53-dev libboost-program-options1.53-dev libboost-regex1.53-dev libboost-filesystem1.53-dev libboost-system1.53-dev libboost-thread1.53-dev libgtest-dev
}}}

Note that the package `libgtest-dev` does not contain prebuilt
binaries of google-test; instead, it installs source code of
google-test into the system directory `/usr/src/gtest`.  Since gtest
has sweat CMake support, you can incorporate it with !MapReduce-Lite by
adding the following line into your `mapreduce-lite/CMakeLists.txt`
file:

{{{
add_subdirectory(/usr/src/gtest ${CMAKE_CURRENT_BINARY_DIR}/gtest)
}}}

=== Build !MapReduce-Lite ===

{{{
mkdir build
cd build
cmake ../mapreduce-lite
make
make install
}}}

Note that in order to specify the installation target directory, you
can edit the following line in `mapreduce-lite/CMakeLists.txt`:

{{{
set(CMAKE_INSTALL_PREFIX "/home/wyi/mapreduce-lite")
}}}

=== Check Result ===

!MapReduce-Lite programs should be statistically linked, so they can be
easily deployed on a computer cluster with the bothering from shared
library depedencies.  In order to check that we have built
statistically linked !MapReduce-Lite demos, you can run the following
command line:

{{{
ldd /home/wyi/mapreduce-lite/mrlite-demo/mrl-wordcount
}}}

If you see and output like `not a dynamic executable`,
congratulations! you got a statically linked binary.
